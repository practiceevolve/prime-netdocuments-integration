{
  // Required X-API-KEY request header to interact with the /console endpoints
  "ConsoleApiKey": "",

  // Base Prime configuration
  "Prime": {
    // Evolve Prime's API endpoint, including trailing slash, e.g. https://api.alpha.practiceevolve.io/{tenant}/api/
    "ApiUrl": "",
    // Entra OAuth endpoint used to request access tokens, e.g. https://id.practiceevolve.net/pevolveextprod.onmicrosoft.com/B2C_1A_IDP_AAD_MULTI/oauth2/v2.0/token
    "TokenEndpoint": "",
    // Scope to request from Prime's identity provider
    "Scope": "",
    // Issued by PE's oeprations team in Entra ID to identify the integration
    "ClientId": "",
    // Issued by PE's operations team, generated by Entra ID, to secure the integration
    "ClientSecret": "",
    // HMAC signing key that Prime should use to sign messages to the webhook receiver to allow it to check it for tampering
    "SigningKey": "",
    // URL base, including trailing slash, of the webhook receiver endpoint to reach this integration's API
    "ReceiverUrl": ""
  },
  // Tenant specific configuration - this will be overriden by config from appsettings.tenants.json and is best removed from this file
  "Tenants": [
    {
      "Prime": {
        // Tenant alias, the unique identifier for a tenant, e.g. sprint
        "Tenant": "demo-tenant",
        // ApiUrl - override base url if required
        "ApiUrl": ""
      },
      "NetDocs": {
	    // NetDocs' oauth token endpoint to request auth tokens from, e.g. https://api.au.netdocuments.com/v1/OAuth
	    "OAuthTokenUrl": "",
	    // NetDocs' API endpoint, e.g. https://api.au.netdocuments.com/
	    "ApiUrl": "",
	    // NetDocs issued application client id for oauth
	    "ClientId": "",
	    // NetDocs issued application client secret for oauth
	    "ClientSecret": "",
	    // NetDocs repository id, where documents are saved to
	    "RepositoryId": "",
	    // NetDocs cabinet within the repository where documents are saved to
	    "CabinetId": "",
	    // Client profile attribute ID, which is a lookup table of clients, can be found in repository admin screen.
	    "ClientAttributeId": "",
	    // Matter profile attribute ID, which is a lookup table of matters, can be found in repository admin screen.
	    "MatterAttributeId": ""
	  }
    }
  ],
  // logging config
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*"
}
